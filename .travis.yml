sudo: required
dist: xenial

language: python
python:
  - "3.7"

branches:
  only:
    - devel
    - travis

before_install:
  # print the distro information
  - lsb_release -a
  - sudo apt-get update -qq
  - sudo apt-get install -y gfortran

  # Here we just install Miniconda, which you shouldn't have to change.
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - export F90=gfortran
  - conda update --yes conda

env:
  - CODECOV_TOKEN=780b4864-10db-46f6-8118-3a93665c8546

install:
  # Make environment and activate
  - conda create --yes --name rem3d python=$TRAVIS_PYTHON_VERSION
  - source $HOME/miniconda/etc/profile.d/conda.sh
  - source activate rem3d
  
  # Install REM3D requirements
  - conda install --yes -c conda-forge netcdf4 basemap basemap-data-hires
  
  # This is for coverage testing
  - conda install --yes -c conda-forge codecov pytest-cov pytest
  - pip install python-slugify
    
script:
  # Running pip install -e . --user directly causes errors
  # Refer https://jeetblogs.org/post/strange-uninstall-failures-when-running-pip-install-in-editable-mode/
  - cd ..
  - pip install -e rem3d --user
  - cd rem3d
  - pytest --cov-report term --cov=.
  # Add the required command for testing here
  - cd tests
  - python test_grab_server_data.py
  - if diff ./S362ANI+M.vs.5.epix ./outputs/S362ANI+M.vs.5.epix ; then
      echo "Build successful";
    else
      echo "Build failed";
      exit 1;
    fi    
    
after_success:
  #If Codecov fails to upload reports, ensure the CI build does not fail with a catch-all:
  - bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN || echo "Codecov did not collect coverage reports"
