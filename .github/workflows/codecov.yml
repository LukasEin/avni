name: github-codecov

on: 
  push: 
    branches:
      - 'main'
      - 'docs'
  release:
    types: [created]

jobs:
  build-codecov:
    runs-on: ubuntu-latest
    steps:  
#     Cache npm modules
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-${{ env.cache-name }}-
            ${{ runner.os }}-npm-

#   The following installs the repo and cd's to it
      - name: Checkout repo
        uses: actions/checkout@v3

#     Install System Requirements
     # install requirements for docs, pyshtools
      - name: System Requirements
        run: ifconfig -a
         && sudo apt-get install doxygen python3-sphinx
         && sudo apt-get install libblas-dev liblapack-dev g++ gfortran libfftw3-dev tcsh

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - run: pip install -r requirements.txt
      - run: pip test

#     Install Conda Requirements
      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('docs/conda/environment_docs.yml') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: avni-docs
          channel-priority: flexible
          python-version: 3.6
          channels: conda-forge
          allow-softlinks: true
          show-channel-urls: true
          environment-file: docs/conda/environment_docs.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show

      - name: Conda Requirements
        run: conda activate avni-docs
         && pip install -e .

      - name: Generate coverage report
        run: |
          pip install pytest
          pip install pytest-cov
          pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage1.xml,./coverage2.xml,!./cache
          flags: unittests
          name: codecov-umbrella
          verbose: true
