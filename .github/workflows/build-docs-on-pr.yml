name: Build docs on PR
on: pull_request
jobs:
  build-html-and-preview:
   runs-on: ubuntu-latest
#   Use the following if you want to run only on devel
#   if: github.ref == 'refs/heads/devel'
   steps:
#     Cache npm modules
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-${{ env.cache-name }}-
            ${{ runner.os }}-npm-

#   The following installs the repo and cd's to it
      - name: Checkout repo
        uses: actions/checkout@v2

#     Install System Requirements
     # install requirements for docs, pyshtools
      - name: System Requirements
        run: ifconfig -a
         && sudo apt-get install doxygen python3-sphinx
         && sudo apt-get install libblas-dev liblapack-dev g++ gfortran libfftw3-dev tcsh

#     Install Conda Requirements
      - name: Conda Requirements
        run: conda config --append channels conda-forge
         && conda config --set channel_priority flexible
         && conda env --name avni-doc create --file docs/conda/environment_doc.yml
         && conda activate avni-doc
         && pip install -e .

#         && pip3 install sphinx_rtd_theme
#         && pip3 install sphinx-sitemap
#         && pip3 install pydata_sphinx_theme
#         && pip3 install numpydoc
#         && pip3 install -U Sphinx
#         && pip3 install sphinxcontrib-apidoc
#         && pip3 install sphinxcontrib-bibtex
#         && pip3 install sphinx-gallery
#         && pip3 install numpy pygments
#         && pip3 install recommonmark

#     Caching based on https://stackoverflow.com/a/57958803
      - name: Cache Tex dependencies
        id: cache-tex
        uses: actions/cache@v3
        with:
          path:  |
            /tmp/texlive
            $HOME/.texlive
          key: ${{ runner.os }}-tex-cache-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-tex-cache-${{ env.cache-name }}-
            ${{ runner.os }}-tex-cache-

#       Install TexLive
# https://github.com/PHPirates/travis-ci-latex-pdf#instructions-for-building-with-pdflatexlualatexlatexmkxelatextexliveonflyetc-and-tex-live
      - name: Install Tex dependencies
        run: |
          source docs/texlive/texlive_install.sh
          echo "/tmp/texlive/bin/x86_64-linux" >> $GITHUB_PATH

      - name: Build html docs
        run: cd docs
          && sphinx-apidoc -o api/ ../avni
          && make html
          && cd _build/html
          && mkdir ../../../public
          && cp -r * ../../../public
          && cd ../../..

# Remove API for latex document, it is broken
# TODO: Fix this. Currently we create too many nested
# lists in the API. Is this a sphinx problem or AVNI problem?
      - name: Build pdf docs
        run: cd docs
          && rm -r api
          && make latex
          && cd _build/latex
          && texliveonfly AVNI.tex
          && ls /tmp/texlive/bin/x86_64-linux
          && make
          && cd ../../..


#     Deploy to Firebase
      - name: Deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_AVNI_EC064 }}'
          projectId: avni-ec064
          channelId: 'pr-${{ github.event.number }}'
          expires: 7d


#     Slack notification
      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\nTemporary ReadtheDocs: https://avni-ec064--pr-${{ github.event.number }}.web.app'"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
